{"version":3,"sources":["App.tsx","index.tsx"],"names":["formatToHKTime","date","toLocaleString","timeZone","year","month","day","hour","minute","second","hour12","App","manualEntry","setManualEntry","useState","participant","setParticipant","isLoading","setIsLoading","file","setFile","uploadStatus","setUploadStatus","error","setError","isAuthenticated","setIsAuthenticated","password","setPassword","showClearConfirmation","setShowClearConfirmation","showUpdateConfirmation","setShowUpdateConfirmation","isDemoMode","setIsDemoMode","showModeSwitch","setShowModeSwitch","modeSwitchPassword","setModeSwitchPassword","activityName","setActivityName","currentActivityName","setCurrentActivityName","pendingActivityName","setPendingActivityName","dailyCheckInCount","setDailyCheckInCount","lastCheckInStatus","setLastCheckInStatus","totalPeople","setTotalPeople","participants","setParticipants","API_URL","scanning","setScanning","autoScan","setAutoScan","cameras","setCameras","selectedCamera","setSelectedCamera","isPreviewVisible","setIsPreviewVisible","isCameraAuthorized","setIsCameraAuthorized","getCameras","useCallback","async","videoDevices","navigator","mediaDevices","enumerateDevices","filter","device","kind","length","deviceId","console","useEffect","addEventListener","removeEventListener","fetchParticipants","response","axios","get","participantsData","data","forEach","p","id","sortedParticipants","Object","values","sort","a","b","aLatest","checkIns","Date","getTime","sortedParticipantsObj","err","checkParticipant","log","checkInTime","toISOString","post","qrData","participantData","signedToday","now","today","getFullYear","getMonth","getDate","some","checkIn","message","isDuplicate","isAxiosError","status","setTimeout","fetchTotalPeople","handleScan","result","scannedText","getText","fetchDailyCheckInCount","fetchCurrentActivity","fetchInitialData","intervalId","setInterval","clearInterval","_jsxs","className","children","_jsx","onClick","handleModeSwitchClick","onSubmit","event","preventDefault","newMode","success","type","value","onChange","target","placeholder","trim","newCameraId","disabled","map","camera","label","style","width","maxWidth","margin","QrReader","onResult","constraints","undefined","facingMode","videoStyle","height","maxHeight","containerStyle","videoContainerStyle","paddingTop","position","getUserMedia","video","getTracks","track","stop","toggleScanning","toggleAutoScan","isValid","name","ename","voice","index","handleLock","files","accept","responseType","blob","Blob","dateStr","split","timeStr","toTimeString","replace","fileName","saveAs","formData","FormData","append","headers","JSON","stringify","keys","fetchParticipantsOnLogin","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4f60aa6.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { QrReader } from 'react-qr-reader';\r\nimport axios from 'axios';\r\nimport { saveAs } from 'file-saver';\r\nimport './App.css';\r\n\r\ninterface Participant {\r\n  id: string;\r\n  name: string;\r\n  ename: string;\r\n  voice: string;\r\n  isValid: boolean;\r\n  checkIns: string[];\r\n  signedToday: boolean;\r\n}\r\n\r\n// Add this interface for the participants list\r\ninterface ParticipantsList {\r\n  [key: string]: Participant;\r\n}\r\n\r\nfunction formatToHKTime(date: Date): string {\r\n  return date.toLocaleString('en-US', { \r\n    timeZone: 'Asia/Hong_Kong',\r\n    year: 'numeric',\r\n    month: '2-digit',\r\n    day: '2-digit',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n    second: '2-digit',\r\n    hour12: false\r\n  });\r\n}\r\n\r\nfunction App() {\r\n  const [manualEntry, setManualEntry] = useState('');\r\n  const [participant, setParticipant] = useState<Participant | null>(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [file, setFile] = useState<File | null>(null);\r\n  const [uploadStatus, setUploadStatus] = useState('');\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [password, setPassword] = useState('');\r\n  const [showClearConfirmation, setShowClearConfirmation] = useState(false);\r\n  const [showUpdateConfirmation, setShowUpdateConfirmation] = useState(false);\r\n  const [isDemoMode, setIsDemoMode] = useState(true);\r\n  const [showModeSwitch, setShowModeSwitch] = useState(false);\r\n  const [modeSwitchPassword, setModeSwitchPassword] = useState('');\r\n  const [activityName, setActivityName] = useState('HKACM 二維碼簽到系統');\r\n  const [currentActivityName, setCurrentActivityName] = useState('');\r\n  const [pendingActivityName, setPendingActivityName] = useState('');\r\n  const [dailyCheckInCount, setDailyCheckInCount] = useState(0);\r\n  const [lastCheckInStatus, setLastCheckInStatus] = useState('');\r\n  const [totalPeople, setTotalPeople] = useState(0);\r\n\r\n  // Add this state variable for storing all participants\r\n  const [participants, setParticipants] = useState<ParticipantsList>({});\r\n\r\n  const API_URL = 'https://192.168.0.119:3001';\r\n\r\n  const [scanning, setScanning] = useState(false);\r\n  const [autoScan, setAutoScan] = useState(false);\r\n\r\n  const [cameras, setCameras] = useState<MediaDeviceInfo[]>([]);\r\n  const [selectedCamera, setSelectedCamera] = useState<string | null>(null);\r\n  const [isPreviewVisible, setIsPreviewVisible] = useState(false);\r\n  const [isCameraAuthorized, setIsCameraAuthorized] = useState(false);\r\n\r\n  const getCameras = useCallback(async () => {\r\n    try {\r\n      const devices = await navigator.mediaDevices.enumerateDevices();\r\n      const videoDevices = devices.filter(device => device.kind === 'videoinput');\r\n      setCameras(videoDevices);\r\n      if (videoDevices.length > 0 && !selectedCamera) {\r\n        setSelectedCamera(videoDevices[0].deviceId);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting cameras:', error);\r\n      setError('無法獲取攝像頭列表');\r\n    }\r\n  }, [selectedCamera]);\r\n\r\n  useEffect(() => {\r\n    getCameras();\r\n    navigator.mediaDevices.addEventListener('devicechange', getCameras);\r\n    return () => {\r\n      navigator.mediaDevices.removeEventListener('devicechange', getCameras);\r\n    };\r\n  }, [getCameras]);\r\n\r\n  const handleCameraChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    const newCameraId = event.target.value;\r\n    setSelectedCamera(newCameraId);\r\n    setScanning(false); // Stop scanning when changing camera\r\n    // Optionally, you can restart scanning after a short delay\r\n    // setTimeout(() => setScanning(true), 1000);\r\n  };\r\n\r\n  const fetchParticipants = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/api/participants`);\r\n      const participantsData: ParticipantsList = {};\r\n      response.data.forEach((p: Participant) => {\r\n        participantsData[p.id] = p;\r\n      });\r\n      \r\n      // Sort participants by their latest check-in\r\n      const sortedParticipants = Object.values(participantsData).sort((a, b) => {\r\n        const aLatest = a.checkIns && a.checkIns.length > 0 ? new Date(a.checkIns[0]).getTime() : 0;\r\n        const bLatest = b.checkIns && b.checkIns.length > 0 ? new Date(b.checkIns[0]).getTime() : 0;\r\n        return bLatest - aLatest; // Sort in descending order (latest first)\r\n      });\r\n\r\n      const sortedParticipantsObj: ParticipantsList = {};\r\n      sortedParticipants.forEach(p => {\r\n        sortedParticipantsObj[p.id] = p;\r\n      });\r\n\r\n      setParticipants(sortedParticipantsObj);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('無法獲取參與者資料。請稍後再試。');\r\n      console.error('Error fetching participants:', err);\r\n    }\r\n  };\r\n\r\n  const fetchParticipantsOnLogin = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/api/participants`);\r\n      const participantsData: ParticipantsList = {};\r\n      response.data.forEach((p: Participant) => {\r\n        participantsData[p.id] = p;\r\n      });\r\n      \r\n      // Sort participants by their latest check-in\r\n      const sortedParticipants = Object.values(participantsData).sort((a, b) => {\r\n        const aLatest = a.checkIns && a.checkIns.length > 0 ? new Date(a.checkIns[0]).getTime() : 0;\r\n        const bLatest = b.checkIns && b.checkIns.length > 0 ? new Date(b.checkIns[0]).getTime() : 0;\r\n        return bLatest - aLatest; // Sort in descending order (latest first)\r\n      });\r\n\r\n      const sortedParticipantsObj: ParticipantsList = {};\r\n      sortedParticipants.forEach(p => {\r\n        sortedParticipantsObj[p.id] = p;\r\n      });\r\n\r\n      setParticipants(sortedParticipantsObj);\r\n      setTotalPeople(Object.keys(sortedParticipantsObj).length); // Update total people count\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('無法獲取參與者資料。請稍後再試。');\r\n      console.error('Error fetching participants:', err);\r\n    }\r\n  };\r\n\r\n  const handleManualSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    if (manualEntry.trim()) {\r\n      await checkParticipant(manualEntry);\r\n      setManualEntry('');\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setManualEntry(event.target.value);\r\n  };\r\n\r\n  const checkParticipant = useCallback(async (id: string) => {\r\n    console.log('Checking participant with ID:', id);\r\n    setIsLoading(true);\r\n    try {\r\n      const checkInTime = new Date().toISOString();\r\n      console.log('Sending check-in request to server...');\r\n      const response = await axios.post(`${API_URL}/api/check-in`, {\r\n        qrData: id,\r\n        checkInTime: checkInTime,\r\n        isDemoMode: isDemoMode,\r\n        activityName: currentActivityName\r\n      });\r\n      \r\n      console.log('Server response:', response.data);\r\n      if (response.data.participant) {\r\n        const participantData: Participant = {\r\n          ...response.data.participant,\r\n          id: id,\r\n          signedToday: false\r\n        };\r\n\r\n        // Calculate if signed today\r\n        const now = new Date();\r\n        const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n        participantData.signedToday = participantData.checkIns.some(checkIn => \r\n          new Date(checkIn) >= today\r\n        );\r\n\r\n        setParticipant(participantData);\r\n        \r\n        // Update last check-in status with ID and duplicate check info\r\n        setLastCheckInStatus(`ID: ${id} - ${response.data.message}${response.data.isDuplicate ? ' (重複簽到)' : ''}`);\r\n        \r\n        // Increment the daily check-in count\r\n        setDailyCheckInCount(response.data.dailyCheckInCount);\r\n        setTotalPeople(response.data.totalPeople);\r\n        await fetchParticipants();\r\n        setManualEntry('');\r\n      } else {\r\n        setParticipant(null);\r\n        setLastCheckInStatus(`ID: ${id} - ${response.data.message}`);\r\n      }\r\n      setError(null);\r\n    } catch (err) {\r\n      console.error('Error checking participant:', err);\r\n      setLastCheckInStatus(`ID: ${id} - 檢查參與者時發生錯誤`);\r\n      setParticipant(null);\r\n      if (axios.isAxiosError(err) && err.response) {\r\n        setError(`錯誤：${err.response.status} - ${err.response.data.message}`);\r\n      } else {\r\n        setError('發生未知錯誤');\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n      if (autoScan) {\r\n        setTimeout(() => setScanning(true), 2000);\r\n      }\r\n    }\r\n  }, [autoScan, currentActivityName, isDemoMode]);\r\n\r\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.files) {\r\n      setFile(event.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async () => {\r\n    if (!file) {\r\n      setUploadStatus('未選擇檔案');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('activityName', pendingActivityName);\r\n\r\n    try {\r\n      const response = await axios.post(`${API_URL}/api/upload-participants`, formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n      });\r\n      setUploadStatus('參與者資料更新成功');\r\n      await fetchParticipants();\r\n      setTotalPeople(response.data.totalPeople);\r\n      setCurrentActivityName(pendingActivityName);\r\n      setError(null);\r\n      setShowUpdateConfirmation(false);\r\n    } catch (err) {\r\n      console.error('File upload error:', err);\r\n      setUploadStatus('上傳檔案時發生錯誤');\r\n      if (axios.isAxiosError(err) && err.response) {\r\n        setError(`錯誤：${err.response.status} - ${JSON.stringify(err.response.data)}`);\r\n      } else {\r\n        setError('檔案上傳時發生未知錯誤');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClearData = async () => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/api/clear-participants`);\r\n      setUploadStatus('所有參與者資料已成功清除');\r\n      setParticipant(null);\r\n      setError(null);\r\n      setShowClearConfirmation(false);\r\n      setParticipants({});\r\n      setTotalPeople(response.data.totalPeople);\r\n    } catch (err) {\r\n      setUploadStatus('清除參與者資料時發生錯誤');\r\n      if (axios.isAxiosError(err) && err.response) {\r\n        setError(`錯誤：${err.response.status} - ${err.response.data}`);\r\n      } else {\r\n        setError('清除資料時發生未知錯誤');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePasswordSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    if (password === 'hkacmadmin') {\r\n      setIsAuthenticated(true);\r\n      await fetchParticipantsOnLogin(); // Fetch participants data on successful login\r\n      await fetchTotalPeople(); // Fetch total number of people\r\n    } else {\r\n      setError('密碼錯誤');\r\n    }\r\n  };\r\n\r\n  const handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleLock = () => {\r\n    setIsAuthenticated(false);\r\n    setPassword('');\r\n    setParticipants({}); // Clear participants data on logout\r\n  };\r\n\r\n  const handleExportExcel = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/api/export-checkins`, {\r\n        responseType: 'blob',\r\n      });\r\n      const blob = new Blob([response.data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n      \r\n      // Generate filename with activity name, app name, date, and time\r\n      const now = new Date();\r\n      const dateStr = now.toISOString().split('T')[0]; // YYYY-MM-DD\r\n      const timeStr = now.toTimeString().split(' ')[0].replace(/:/g, '-'); // HH-MM-SS\r\n      const fileName = `${currentActivityName || 'Unnamed_Activity'}_${activityName}_${dateStr}_${timeStr}.xlsx`;\r\n      \r\n      saveAs(blob, fileName);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('匯出簽到記錄時發生錯誤');\r\n      console.error('Error exporting check-ins:', err);\r\n    }\r\n  };\r\n\r\n  const handleModeSwitchClick = () => {\r\n    setShowModeSwitch(true);\r\n  };\r\n\r\n  const handleModeSwitchPasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setModeSwitchPassword(event.target.value);\r\n  };\r\n\r\n  const handleModeSwitchSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    if (modeSwitchPassword === 'hkacmadmin') {\r\n      try {\r\n        const newMode = !isDemoMode;\r\n        const response = await axios.post(`${API_URL}/api/set-demo-mode`, { isDemoMode: newMode });\r\n        if (response.data.success) {\r\n          setIsDemoMode(newMode);\r\n          setShowModeSwitch(false);\r\n          setModeSwitchPassword('');\r\n          setError(null);\r\n          setLastCheckInStatus(`已切換至${newMode ? '演示' : '正式'}模式`);\r\n        } else {\r\n          setError('切換模式失敗。請稍後再試。');\r\n        }\r\n      } catch (err) {\r\n        setError('切換模式時發生錯誤。請稍後再試。');\r\n        console.error('Error switching modes:', err);\r\n      }\r\n    } else {\r\n      setError('模式切換密碼錯誤');\r\n    }\r\n  };\r\n\r\n  const toggleAutoScan = () => {\r\n    setAutoScan(!autoScan);\r\n    if (!autoScan) {\r\n      setScanning(true);\r\n      setIsPreviewVisible(true);\r\n    }\r\n  };\r\n\r\n  const handleActivityNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setActivityName(event.target.value);\r\n  };\r\n\r\n  const handleCurrentActivityNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPendingActivityName(event.target.value);\r\n  };\r\n\r\n  const fetchTotalPeople = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/api/total-people`);\r\n      setTotalPeople(response.data.totalPeople);\r\n    } catch (error) {\r\n      console.error('Error fetching total number of people:', error);\r\n    }\r\n  };\r\n\r\n  const toggleScanning = () => {\r\n    if (scanning) {\r\n      setScanning(false);\r\n      setIsPreviewVisible(false);\r\n    } else {\r\n      setScanning(true);\r\n      setIsPreviewVisible(true);\r\n    }\r\n  };\r\n\r\n  const handleScan = useCallback((result: any) => {\r\n    if (result) {\r\n      const scannedText = result.getText();\r\n      console.log('Scan result:', scannedText);\r\n      checkParticipant(scannedText);\r\n      if (!autoScan) {\r\n        setScanning(false);\r\n        setIsPreviewVisible(false);\r\n      }\r\n    }\r\n  }, [autoScan, checkParticipant]);\r\n\r\n  const handleCameraAuthorization = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n      stream.getTracks().forEach(track => track.stop()); // Stop the stream immediately\r\n      setIsCameraAuthorized(true);\r\n      setError(null);\r\n    } catch (error) {\r\n      console.error('Error authorizing camera:', error);\r\n      setError('無法獲取攝像頭權限。請確保您已授予攝像頭訪問權限。');\r\n      setIsCameraAuthorized(false);\r\n    }\r\n  };\r\n\r\n  const fetchDailyCheckInCount = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/api/daily-check-in-count`);\r\n      setDailyCheckInCount(response.data.dailyCheckInCount);\r\n    } catch (error) {\r\n      console.error('Error fetching daily check-in count:', error);\r\n      setError('無法獲取今日總簽到次數');\r\n    }\r\n  };\r\n\r\n  const handleResetDailyCheckInCount = async () => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/api/reset-daily-check-in-count`);\r\n      if (response.data.success) {\r\n        setDailyCheckInCount(0);\r\n        setLastCheckInStatus('今日總簽到次數已重置');\r\n      } else {\r\n        setError('重置今日總簽到次數失敗');\r\n      }\r\n    } catch (err) {\r\n      setError('重置今日總簽到次數時發生錯誤');\r\n      console.error('Error resetting daily check-in count:', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchInitialData = async () => {\r\n      await fetchTotalPeople();\r\n      await fetchDailyCheckInCount();\r\n      await fetchCurrentActivity();\r\n    };\r\n\r\n    fetchInitialData();\r\n\r\n    // Fetch total people and daily check-in count every 5 minutes\r\n    const intervalId = setInterval(() => {\r\n      fetchTotalPeople();\r\n      fetchDailyCheckInCount();\r\n    }, 5 * 60 * 1000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  const fetchCurrentActivity = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/api/current-activity`);\r\n      setCurrentActivityName(response.data.currentActivityName);\r\n      setPendingActivityName(response.data.currentActivityName);\r\n    } catch (error) {\r\n      console.error('Error fetching current activity:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>{activityName}</h1>\r\n        <h2>{currentActivityName || '未設定當前活動'}</h2>\r\n        <div className=\"mode-switch\">\r\n          <span>目前模式：{isDemoMode ? '演示' : '正式'}</span>\r\n          <button onClick={handleModeSwitchClick} className=\"mode-switch-button\">\r\n            切換至{isDemoMode ? '正式' : '演示'}模式\r\n          </button>\r\n        </div>\r\n      </header>\r\n      \r\n      <main className=\"App-main\">\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n\r\n        {showModeSwitch && (\r\n          <div className=\"modal mode-switch-confirmation\">\r\n            <div className=\"modal-content\">\r\n              <h3>確認模式切換</h3>\r\n              <p>請輸入管理員密碼以切換至{isDemoMode ? '正式' : '演示'}模式：</p>\r\n              <form onSubmit={handleModeSwitchSubmit} className=\"mode-switch-form\">\r\n                <input\r\n                  type=\"password\"\r\n                  value={modeSwitchPassword}\r\n                  onChange={handleModeSwitchPasswordChange}\r\n                  placeholder=\"輸入管理員密碼\"\r\n                  className=\"input-field\"\r\n                />\r\n                <div className=\"button-group\">\r\n                  <button type=\"submit\" className=\"submit-button\">確認切換</button>\r\n                  <button onClick={() => setShowModeSwitch(false)} className=\"cancel-button\">取消</button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <section className=\"check-in-section\">\r\n          <h2>簽到</h2>\r\n          <form onSubmit={handleManualSubmit} className=\"check-in-form\">\r\n            <input\r\n              type=\"text\"\r\n              value={manualEntry}\r\n              onChange={handleInputChange}\r\n              placeholder=\"手動輸入參與者ID或掃描二維碼\"\r\n              className=\"input-field\"\r\n            />\r\n            <button type=\"submit\" className=\"submit-button\">提交</button>\r\n          </form>\r\n\r\n          <div className=\"qr-scanner-section\">\r\n            <p className=\"status-message\">最後簽到狀態：{lastCheckInStatus}</p>\r\n            \r\n            <select \r\n              value={selectedCamera || ''} \r\n              onChange={handleCameraChange}\r\n              disabled={scanning}\r\n            >\r\n              {cameras.map((camera) => (\r\n                <option key={camera.deviceId} value={camera.deviceId}>\r\n                  {camera.label || `Camera ${camera.deviceId}`}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            \r\n            <div className=\"scanner-container\" style={{ width: '100%', maxWidth: '600px', margin: '0 auto' }}>\r\n              {isPreviewVisible && (\r\n                <QrReader\r\n                  key={selectedCamera}\r\n                  onResult={handleScan}\r\n                  constraints={{ deviceId: selectedCamera || undefined, facingMode: 'environment' }}\r\n                  videoStyle={{ width: '100%', height: 'auto', maxHeight: '80vh' }}\r\n                  containerStyle={{ width: '100%', height: 'auto' }}\r\n                  videoContainerStyle={{ width: '100%', height: 'auto', paddingTop: '75%', position: 'relative' }}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"scanner-controls\">\r\n              <button onClick={handleCameraAuthorization} className=\"authorize-camera-button\">\r\n                授權攝像頭\r\n              </button>\r\n              <button \r\n                onClick={toggleScanning} \r\n                className={scanning ? \"stop-scan-button\" : \"scan-button\"}\r\n                disabled={!isCameraAuthorized}\r\n              >\r\n                {scanning ? '停止掃描' : '開始掃描'}\r\n              </button>\r\n              <button \r\n                onClick={toggleAutoScan} \r\n                className={`auto-scan-button ${autoScan ? 'active' : ''}`}\r\n                disabled={!isCameraAuthorized}\r\n              >\r\n                {autoScan ? '關閉自動掃描' : '開啟自動掃描'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <p className=\"check-in-count\">今日總簽到次數：{dailyCheckInCount}</p>\r\n          <p className=\"total-people\">總人數：{totalPeople}</p>\r\n\r\n          {isLoading && <p className=\"loading-message\">載入中...</p>}\r\n        </section>\r\n\r\n        {participant && (\r\n          <section className=\"participant-info\">\r\n            <h2>參與者資訊</h2>\r\n            <table className=\"info-table\">\r\n              <tbody>\r\n                <tr>\r\n                  <td><strong>ID</strong></td>\r\n                  <td>{participant.id}</td>\r\n                  <td><strong>狀態</strong></td>\r\n                  <td>{participant.isValid ? '有效' : '無效'}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td><strong>中文姓名</strong></td>\r\n                  <td>{participant.name}</td>\r\n                  <td><strong>英文姓名</strong></td>\r\n                  <td>{participant.ename}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td><strong>聲部</strong></td>\r\n                  <td>{participant.voice}</td>\r\n                  <td><strong>今日已簽到</strong></td>\r\n                  <td>{participant.signedToday ? '是' : '否'}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            {participant.checkIns && participant.checkIns.length > 0 && (\r\n              <div className=\"check-ins\">\r\n                <h3>簽到記錄</h3>\r\n                <table className=\"check-in-history-table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>序號</th>\r\n                      <th>簽到時間</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {participant.checkIns.map((checkIn, index) => (\r\n                      <tr key={index}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{formatToHKTime(new Date(checkIn))}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            )}\r\n          </section>\r\n        )}\r\n      </main>\r\n\r\n      <section className=\"auth-section\">\r\n        <div className=\"login-container\">\r\n          <h2>管理員登入</h2>\r\n          {!isAuthenticated ? (\r\n            <form onSubmit={handlePasswordSubmit} className=\"login-form\">\r\n              <input\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={handlePasswordChange}\r\n                placeholder=\"輸入管理員密碼\"\r\n                className=\"input-field\"\r\n              />\r\n              <button type=\"submit\" className=\"submit-button\">登入</button>\r\n            </form>\r\n          ) : (\r\n            <div className=\"admin-section\">\r\n              <div className=\"section-header\">\r\n                <h3>管理員功能</h3>\r\n                <button onClick={handleLock} className=\"lock-button\">鎖定</button>\r\n              </div>\r\n              <div className=\"admin-controls\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={activityName}\r\n                  onChange={handleActivityNameChange}\r\n                  placeholder=\"輸入系統名稱\"\r\n                  className=\"input-field\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  value={pendingActivityName}\r\n                  onChange={handleCurrentActivityNameChange}\r\n                  placeholder=\"輸入當前活動名稱\"\r\n                  className=\"input-field\"\r\n                />\r\n                <input\r\n                  type=\"file\"\r\n                  onChange={handleFileChange}\r\n                  accept=\".xlsx,.xls\"\r\n                  className=\"file-input\"\r\n                />\r\n                <button onClick={() => setShowUpdateConfirmation(true)} className=\"upload-button\">上傳 Excel 檔案</button>\r\n                <button onClick={() => setShowClearConfirmation(true)} className=\"clear-button\">清除所有資料</button>\r\n                <button onClick={handleExportExcel} className=\"export-button\">匯出簽到記錄</button>\r\n                <button onClick={handleResetDailyCheckInCount} className=\"reset-button\">重置今日總簽到次數</button>\r\n              </div>\r\n              <p className=\"upload-status\">{uploadStatus}</p>\r\n              {showUpdateConfirmation && (\r\n                <div className=\"modal update-confirmation\">\r\n                  <div className=\"modal-content\">\r\n                    <h3>確認更新</h3>\r\n                    <p>您確定要上傳新的參與者資料嗎？這將會覆蓋現有的資料。</p>\r\n                    <div className=\"button-group\">\r\n                      <button onClick={handleFileUpload} className=\"confirm-update-button\">確認</button>\r\n                      <button onClick={() => setShowUpdateConfirmation(false)} className=\"cancel-update-button\">取消</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {showClearConfirmation && (\r\n                <div className=\"modal clear-confirmation\">\r\n                  <div className=\"modal-content\">\r\n                    <h3>確認清除</h3>\r\n                    <p>您確定要清除所有參與者資料嗎？此操作無法撤銷。</p>\r\n                    <div className=\"button-group\">\r\n                      <button onClick={handleClearData} className=\"confirm-clear-button\">確認</button>\r\n                      <button onClick={() => setShowClearConfirmation(false)} className=\"cancel-clear-button\">取消</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </section>\r\n\r\n      {isAuthenticated && (\r\n        <section className=\"participant-table\">\r\n          <h2>參與者列表</h2>\r\n          <div className=\"table-container\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>序號</th>\r\n                  <th>ID</th>\r\n                  <th>中文姓名</th>\r\n                  <th>英文姓名</th>\r\n                  <th>聲部</th>\r\n                  <th>狀態</th>\r\n                  <th>今日已簽到</th>\r\n                  <th>簽到記錄</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {Object.values(participants).map((p: Participant, index: number) => {\r\n                  // Calculate if signed today\r\n                  const now = new Date();\r\n                  const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n                  const signedToday = p.checkIns.some(checkIn => \r\n                    new Date(checkIn) >= today\r\n                  );\r\n\r\n                  return (\r\n                    <tr key={p.id}>\r\n                      <td>{index + 1}</td>\r\n                      <td>{p.id}</td>\r\n                      <td>{p.name}</td>\r\n                      <td>{p.ename}</td>\r\n                      <td>{p.voice}</td>\r\n                      <td>{p.isValid ? '有效' : '無效'}</td>\r\n                      <td>{signedToday ? '是' : '否'}</td>\r\n                      <td>\r\n                        {p.checkIns && p.checkIns.length > 0 ? (\r\n                          <ul className=\"check-in-list\">\r\n                            {p.checkIns.map((checkIn, index) => (\r\n                              <li key={index}>{formatToHKTime(new Date(checkIn))}</li>\r\n                            ))}\r\n                          </ul>\r\n                        ) : '未簽到'}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </section>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}