{"version":3,"sources":["App.tsx","index.tsx"],"names":["ParticipantTable","_ref","participants","_jsxs","style","width","borderCollapse","marginTop","children","_jsx","tableHeaderStyle","map","p","tableCellStyle","id","name","ename","email","voice","isValid","backgroundColor","padding","borderBottom","textAlign","App","scanResult","setScanResult","useState","manualEntry","setManualEntry","participant","setParticipant","status","setStatus","isLoading","setIsLoading","file","setFile","uploadStatus","setUploadStatus","setParticipants","error","setError","multipleCheckIns","setMultipleCheckIns","checkInCount","setCheckInCount","isAuthenticated","setIsAuthenticated","password","setPassword","useEffect","fetchParticipants","async","response","axios","get","data","err","console","checkParticipant","checkInTime","Date","toISOString","post","qrData","message","isAxiosError","className","color","marginBottom","margin","QrReader","onResult","result","text","constraints","facingMode","onSubmit","event","preventDefault","trim","type","value","onChange","target","placeholder","fontWeight","checkIns","checkIn","index","toLocaleString","_Fragment","display","justifyContent","alignItems","onClick","handleLock","files","accept","formData","FormData","append","headers","marginLeft","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d14b6ef2.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { QrReader } from 'react-qr-reader';\r\nimport axios from 'axios';\r\n\r\ninterface Participant {\r\n  id: string;\r\n  name: string;\r\n  ename: string;\r\n  email: string;\r\n  voice: string;\r\n  isValid: boolean;\r\n  checkIns?: string[];\r\n}\r\n\r\nfunction ParticipantTable({ participants }: { participants: Participant[] }) {\r\n  return (\r\n    <table style={{ width: '100%', borderCollapse: 'collapse', marginTop: '20px' }}>\r\n      <thead>\r\n        <tr>\r\n          <th style={tableHeaderStyle}>ID</th>\r\n          <th style={tableHeaderStyle}>Chinese Name</th>\r\n          <th style={tableHeaderStyle}>English Name</th>\r\n          <th style={tableHeaderStyle}>Email</th>\r\n          <th style={tableHeaderStyle}>Voice</th>\r\n          <th style={tableHeaderStyle}>Status</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {participants.map((p) => (\r\n          <tr key={p.id}>\r\n            <td style={tableCellStyle}>{p.id}</td>\r\n            <td style={tableCellStyle}>{p.name}</td>\r\n            <td style={tableCellStyle}>{p.ename}</td>\r\n            <td style={tableCellStyle}>{p.email}</td>\r\n            <td style={tableCellStyle}>{p.voice}</td>\r\n            <td style={tableCellStyle}>{p.isValid ? 'Valid' : 'Invalid'}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const [scanResult, setScanResult] = useState('');\r\n  const [manualEntry, setManualEntry] = useState('');\r\n  const [participant, setParticipant] = useState<Participant | null>(null);\r\n  const [status, setStatus] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [file, setFile] = useState<File | null>(null);\r\n  const [uploadStatus, setUploadStatus] = useState('');\r\n  const [participants, setParticipants] = useState<Participant[]>([]);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [multipleCheckIns, setMultipleCheckIns] = useState(false);\r\n  const [checkInCount, setCheckInCount] = useState(0);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [password, setPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchParticipants();\r\n  }, []);\r\n\r\n  const fetchParticipants = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3001/api/participants');\r\n      setParticipants(response.data);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Failed to fetch participants. Please try again later.');\r\n      console.error('Error fetching participants:', err);\r\n    }\r\n  };\r\n\r\n  const handleScan = async (result: any) => {\r\n    if (result) {\r\n      await checkParticipant(result.text);\r\n    }\r\n  };\r\n\r\n  const handleManualSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    if (manualEntry.trim()) {\r\n      await checkParticipant(manualEntry);\r\n      setManualEntry('');\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setManualEntry(event.target.value);\r\n  };\r\n\r\n  const checkParticipant = async (id: string) => {\r\n    setIsLoading(true);\r\n    setScanResult(id);\r\n    setStatus('Checking...');\r\n    try {\r\n      const checkInTime = new Date().toISOString();\r\n      const response = await axios.post('http://localhost:3001/api/check-in', {\r\n        qrData: id,\r\n        checkInTime: checkInTime\r\n      });\r\n      \r\n      if (response.data.participant) {\r\n        setParticipant(response.data.participant);\r\n        setStatus(response.data.message);\r\n        setMultipleCheckIns(response.data.multipleCheckIns);\r\n        setCheckInCount(response.data.checkInCount || 0);\r\n        // Refresh the participant list after a successful check-in\r\n        fetchParticipants();\r\n      } else {\r\n        setParticipant(null);\r\n        setStatus(response.data.message);\r\n        setMultipleCheckIns(false);\r\n        setCheckInCount(0);\r\n      }\r\n      setError(null);\r\n    } catch (err) {\r\n      setStatus('Error checking participant');\r\n      setParticipant(null);\r\n      setMultipleCheckIns(false);\r\n      setCheckInCount(0);\r\n      if (axios.isAxiosError(err) && err.response) {\r\n        setError(`Error: ${err.response.status} - ${err.response.data.message}`);\r\n      } else {\r\n        setError('An unexpected error occurred');\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.files) {\r\n      setFile(event.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async () => {\r\n    if (!file) {\r\n      setUploadStatus('No file selected');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      await axios.post('http://localhost:3001/api/upload-participants', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n      });\r\n      setUploadStatus('Participants updated successfully');\r\n      fetchParticipants(); // Refresh the participant list\r\n      setError(null);\r\n    } catch (err) {\r\n      setUploadStatus('Error uploading file');\r\n      if (axios.isAxiosError(err) && err.response) {\r\n        setError(`Error: ${err.response.status} - ${err.response.data}`);\r\n      } else {\r\n        setError('An unexpected error occurred during file upload');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClearData = async () => {\r\n    try {\r\n      await axios.post('http://localhost:3001/api/clear-participants');\r\n      setUploadStatus('All participant data cleared successfully');\r\n      setParticipants([]);\r\n      setError(null);\r\n    } catch (err) {\r\n      setUploadStatus('Error clearing participant data');\r\n      if (axios.isAxiosError(err) && err.response) {\r\n        setError(`Error: ${err.response.status} - ${err.response.data}`);\r\n      } else {\r\n        setError('An unexpected error occurred while clearing data');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePasswordSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    // Replace 'your_password_here' with the actual password you want to use\r\n    if (password === 'hkacmstaffadmin') {\r\n      setIsAuthenticated(true);\r\n    } else {\r\n      setError('Incorrect password');\r\n    }\r\n  };\r\n\r\n  const handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleLock = () => {\r\n    setIsAuthenticated(false);\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\" style={{ padding: '20px' }}>\r\n      <h1>QR Code Check-in</h1>\r\n      \r\n      {error && <div style={{ color: 'red', marginBottom: '20px' }}>{error}</div>}\r\n\r\n      <div style={{ width: '300px', margin: 'auto' }}>\r\n        <QrReader onResult={handleScan} constraints={{ facingMode: 'environment' }} />\r\n      </div>\r\n      <p>Scanned Code: {scanResult}</p>\r\n      \r\n      <form onSubmit={handleManualSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={manualEntry}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Enter participant ID manually\"\r\n        />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n\r\n      <p>Status: {status}</p>\r\n\r\n      {isLoading && <p>Loading...</p>}\r\n      {participant && (\r\n        <div>\r\n          <h2>Participant Found:</h2>\r\n          <p>ID: {scanResult}</p>\r\n          <p>Chinese Name: {participant.name || 'Not provided'}</p>\r\n          <p>English Name: {participant.ename || 'Not provided'}</p>\r\n          <p>Email: {participant.email || 'Not provided'}</p>\r\n          <p>Voice: {participant.voice || 'Not provided'}</p>\r\n          <p>Status: {participant.isValid ? 'Valid' : 'Invalid'}</p>\r\n          {multipleCheckIns && (\r\n            <p style={{ color: 'orange', fontWeight: 'bold' }}>\r\n              Warning: This is check-in number {checkInCount} today for this participant.\r\n            </p>\r\n          )}\r\n          <h3>Check-in History:</h3>\r\n          <ul>\r\n            {participant.checkIns && participant.checkIns.map((checkIn, index) => (\r\n              <li key={index}>{new Date(checkIn).toLocaleString()}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      {!isAuthenticated ? (\r\n        <div>\r\n          <h2>Admin Blocked</h2>\r\n          <form onSubmit={handlePasswordSubmit}>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={handlePasswordChange}\r\n              placeholder=\"Enter password\"\r\n            />\r\n            <button type=\"submit\">Submit</button>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n            <h2>Admin Section</h2>\r\n            <button onClick={handleLock} style={{ backgroundColor: 'orange', color: 'white' }}>Lock</button>\r\n          </div>\r\n          <div>\r\n            <h3>Update Participants</h3>\r\n            <input type=\"file\" onChange={handleFileChange} accept=\".xlsx, .xls\" />\r\n            <button onClick={handleFileUpload}>Upload</button>\r\n            <button onClick={handleClearData} style={{ marginLeft: '10px', backgroundColor: 'red', color: 'white' }}>Clear All Data</button>\r\n            <p>{uploadStatus}</p>\r\n          </div>\r\n\r\n          <h3>Participant List</h3>\r\n          <ParticipantTable participants={participants} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst tableHeaderStyle: React.CSSProperties = {\r\n  backgroundColor: '#f2f2f2',\r\n  padding: '10px',\r\n  borderBottom: '1px solid #ddd',\r\n  textAlign: 'left'\r\n};\r\n\r\nconst tableCellStyle: React.CSSProperties = {\r\n  padding: '10px',\r\n  borderBottom: '1px solid #ddd'\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}